plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.3'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'maven-publish'
}

group = 'com.fluidnotions'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('compileJava') {
    inputs.files(tasks.named('processResources'))
}


def properties = new Properties()
file(project.rootDir.absolutePath + "/local.properties").withInputStream { properties.load(it) }

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/fluidnotions/spring-generic-aop-retry-on-exception")
            credentials {
                username = properties.getProperty('github.username')
                password = properties.getProperty('github.token')
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
            artifactId = 'spring-generic-aop-retry-on-exception'
        }
    }
}
